#include <stdio.h>
#include <stdlib.h>

int main() {
    int *arr1, *arr2;
    int n, new_size;

    printf("Enter the number of elements for the first array: ");
    scanf("%d", &n);

    arr1 = (int *)malloc(n * sizeof(int));
    if (arr1 == NULL) {
        printf("Memory allocation failed using malloc!\n");
        return 1;
    }

    printf("Enter %d elements for the first array:\n", n);
    for (int i = 0; i < n; i++) {
        scanf("%d", &arr1[i]);
    }

    printf("\nEnter the new size for the first array: ");
    scanf("%d", &new_size);

    arr1 = (int *)realloc(arr1, new_size * sizeof(int));
    if (arr1 == NULL)
 {
        printf("Memory reallocation failed using realloc!\n");
        return 1;
    }

        if (new_size > n)
 {
        printf("Enter %d additional elements:\n", new_size - n);
        for (int i = n; i < new_size; i++)
 {
            scanf("%d", &arr1[i]);
        }
    }

    printf("\nEnter the number of elements for the second array: ");
    scanf("%d", &n);

    arr2 = (int *)calloc(n, sizeof(int));
    if (arr2 == NULL) {
        printf("Memory allocation failed using calloc!\n");
        free(arr1);
        return 1;
    }

    printf("The second array is initialized to zeros:\n");
    for (int i = 0; i < n; i++) {
        printf("%d ", arr2[i]);
    }

    printf("\n\nFirst array elements:\n");
    for (int i = 0; i < new_size; i++) {
        printf("%d ", arr1[i]);
    }

    free(arr1);
    free(arr2);

    printf("\n\nMemory freed successfully.\n");
    return 0;
}

